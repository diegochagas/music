{"version":3,"sources":["images/noimage.jpg","apis/SpotifyAPI.js","apis/FavoriteAPI.js","actions/index.js","components/SearchBar.js","components/ArtistLatestAlbums.js","components/FavoriteItems.js","components/ArtistListItem.js","components/AlbumTracks.js","components/AlbumListItem.js","components/TrackListItem.js","components/MusicListItem.js","components/MusicList.js","App.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","ACTUAL_URL","concat","window","location","protocol","host","getToken","hashURL","hash","getHashParams","replace","find","undefined","access_token","split","map","param","keyValue","key","value","SpotifyAPI","ACCESS_TOKEN","axios","create","baseURL","headers","Accept","Content-Type","Authorization","updateFavorite","id","favorite","localStorage","getItem","setItem","isFavorite","Boolean","TYPE_ARTISTS","TYPE_ALBUMS","TYPE_TRACKS","SearchBar","onSearchTermSubmit","event","preventDefault","selectValue","_this","refs","selectType","props","fetchSearchTermType","searchTerm","alert","fetchArtists","fetchAlbums","fetchTracks","react_default","a","createElement","className","onSubmit","this","type","placeholder","ref","defaultValue","name","disabled","React","Component","connect","state","searchTermType","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","get","params","q","sent","payload","data","artists","items","stop","_x","apply","arguments","_ref2","_callee2","_context2","albums","t0","error","status","_x2","_ref3","_callee3","_context3","tracks","_x3","termType","ArtistLatestAlbums","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleClass","setState","active","onClick","album","images","src","length","url","alt","FavoriteItems","onFavoriteClick","fetchIsFavorite","itemId","iFavorite","ArtistListItem","renderGenres","genres","genre","renderPopularity","popularity","fetchLatestAlbums","item","_this$props$item","noImage","src_components_FavoriteItems","ArtistLatestAlbums_ArtistLatestAlbums","artistLatestAlbums","_ref4","_callee4","_context4","console","log","_x4","AlbumTracks","renderDuration","duration","seconds","millisecondsToSeconds","minutes","millisecondsToMinutes","buildNumberTime","milliseconds","Math","floor","time","_this2","track","track_number","duration_ms","AlbumListItem","renderArtists","spanText","renderAvailability","availableMarkets","market","fetchAlbumTracks","available_markets","AlbumTracks_AlbumTracks","albumTracks","_ref5","_callee5","_context5","_x5","TrackListItem","artist","_this$props$item$albu","albumName","MusicListItem","selectListItem","_this$props","src_components_ArtistListItem","src_components_AlbumListItem","TrackListItem_TrackListItem","MusicList","renderMusicList","src_components_MusicListItem","App","src_components_SearchBar","components_MusicList","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gaCGlCC,EAAU,GAAAC,OAAMC,OAAOC,SAASC,SAAtB,MAAAH,OAAmCC,OAAOC,SAASE,MAc7DC,EAAW,WACf,IAAMC,EAAUL,OAAOC,SAASK,KAChC,GAAe,KAAZD,EAGD,OAFcE,EAAcF,EAAQG,QAAQ,IAAK,KAC9BC,KAAK,SAAAH,GAAI,YAA0BI,IAAtBJ,EAAKK,eACzBA,aAEdX,OAAOC,SAAP,GAAAF,OAvBmB,yCAuBnB,mCAAAA,OAtBgB,mCAsBhB,kBAAAA,OAA6FD,IAGzFS,EAAgB,SAAAD,GAEpB,OADeA,EAAKM,MAAM,KACZC,IAAI,SAAAC,GAChB,IAAIC,EAAWD,EAAMF,MAAM,KACvBI,EAAMD,EAAS,GACfE,EAAQF,EAAS,GACjBT,EAAO,GAEX,OADAA,EAAKU,GAAOC,EACLX,KAWIY,EAzCI,WACjB,IAAMC,EAAef,IACrB,OAAOgB,IAAMC,OAAO,CAClBC,QAAS,6BACTC,QAAS,CACPC,OAAU,mBACVC,eAAgB,mBAChBC,cAAA,UAAA3B,OAA2BoB,OCVpBQ,EAAiB,SAAAC,GAC5B,IAAMC,EAAWC,aAAaC,QAAQH,GACtC,GAAiB,OAAbC,EAEF,OADAC,aAAaE,QAAQJ,EAAI,UAClB,EAET,IAAMK,EAAaC,QAAQL,GAE3B,OADAC,aAAaE,QAAQJ,EAArB,IAAA7B,QAA8BkC,EAA9B,MACOA,GCRIE,EAAe,SACfC,EAAc,QACdC,EAAc,QCCrBC,oNAgBJC,mBAAqB,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAcC,EAAKC,KAAKC,WAAW5B,MACzC0B,EAAKG,MAAMC,oBAAoBL,GAC/B,IAAMM,EAAaL,EAAKC,KAAKI,WAAW/B,MACxC,GAAkB,KAAf+B,EACDC,MAAM,0BAEN,OAAQP,GACN,KAAKP,EACLQ,EAAKG,MAAMI,aAAaF,GACtB,MACF,KAAKZ,EACHO,EAAKG,MAAMK,YAAYH,GACvB,MACF,KAAKX,EACHM,EAAKG,MAAMM,YAAYJ,GACvB,MACF,QACEC,MAAM,+FAjCZ,OACEI,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaC,SAAUC,KAAKnB,oBAC1Cc,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOC,YAAY,SAASC,IAAI,eAC5CR,EAAAC,EAAAC,cAAA,UAAQO,aAAa,UAAUC,KAAK,OAAOF,IAAI,cAC7CR,EAAAC,EAAAC,cAAA,UAAQS,SAAS,WAAW/C,MAAM,WAAlC,iBACAoC,EAAAC,EAAAC,cAAA,UAAQtC,MAAOkB,GAAf,UACAkB,EAAAC,EAAAC,cAAA,UAAQtC,MAAOmB,GAAf,SACAiB,EAAAC,EAAAC,cAAA,UAAQtC,MAAOoB,GAAf,UAEFgB,EAAAC,EAAAC,cAAA,gCAXgBU,IAAMC,YA8CfC,cAJS,SAAAC,GACtB,MAAO,CAAEC,eAAgBD,EAAMC,iBAGO,CAAEnB,aDzCd,SAAAF,GAAU,sBAAAsB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAnB,EAAAoB,KAAI,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAAnB,EAAAwB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjB/D,IAAagE,IAAb,UAA4B,CACjDC,OAAQ,CAAEC,EAAGpC,EAAYW,KAAMxB,KAFO,OAClC0C,EADkCE,EAAAM,KAIxCT,EAAS,CAACjB,KAAMxB,EAAcmD,QAAST,EAASU,KAAKC,QAAQC,QAJrB,wBAAAV,EAAAW,SAAAf,MAAJ,gBAAAgB,GAAA,OAAArB,EAAAsB,MAAAlC,KAAAmC,YAAA,ICyCkB1C,YDlC7B,SAAAH,GAAU,sBAAA8C,EAAAvB,OAAAC,EAAA,EAAAD,CAAAE,EAAAnB,EAAAoB,KAAI,SAAAqB,EAAMnB,GAAN,IAAAC,EAAA,OAAAJ,EAAAnB,EAAAwB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAEd/D,IAAagE,IAAb,UAA4B,CACjDC,OAAQ,CAAEC,EAAGpC,EAAYW,KAAMvB,KAHI,OAE/ByC,EAF+BmB,EAAAX,KAKrCT,EAAS,CAACjB,KAAMvB,EAAakD,QAAST,EAASU,KAAKU,OAAOR,QALtBO,EAAAf,KAAA,gBAAAe,EAAAhB,KAAA,EAAAgB,EAAAE,GAAAF,EAAA,SFuBvB,MEhBFA,EAAAE,GAAIrB,SAASU,KAAKY,MAAMC,SFiBpCpG,OAAOC,SAASK,KAAO,GACvBF,KEzBqC,yBAAA4F,EAAAN,SAAAK,EAAA,iBAAJ,gBAAAM,GAAA,OAAAP,EAAAF,MAAAlC,KAAAmC,YAAA,ICkCgCzC,YDvB1C,SAAAJ,GAAU,sBAAAsD,EAAA/B,OAAAC,EAAA,EAAAD,CAAAE,EAAAnB,EAAAoB,KAAI,SAAA6B,EAAM3B,GAAN,IAAAC,EAAA,OAAAJ,EAAAnB,EAAAwB,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAChB/D,IAAagE,IAAb,UAA4B,CACjDC,OAAQ,CAAEC,EAAGpC,EAAYW,KAAMtB,KAFM,OACjCwC,EADiC2B,EAAAnB,KAIvCT,EAAS,CAACjB,KAAMtB,EAAaiD,QAAST,EAASU,KAAKkB,OAAOhB,QAJpB,wBAAAe,EAAAd,SAAAa,MAAJ,gBAAAG,GAAA,OAAAJ,EAAAV,MAAAlC,KAAAmC,YAAA,ICuB6C9C,oBDE/C,SAAA4D,GACjC,MAAO,CAAEhD,KA9C2B,yBA8CG2B,QAASqB,KCHnCxC,CAA2F7B,GCjDrFsE,qBACnB,SAAAA,EAAY9D,GAAO,IAAAH,EAAA,OAAA4B,OAAAsC,EAAA,EAAAtC,CAAAb,KAAAkD,IACjBjE,EAAA4B,OAAAuC,EAAA,EAAAvC,CAAAb,KAAAa,OAAAwC,EAAA,EAAAxC,CAAAqC,GAAAI,KAAAtD,KAAMZ,KAuBRmE,YAAc,kBAAMtE,EAAKuE,SAAS,CAACC,QAASxE,EAAKyB,MAAM+C,UAtBrDxE,EAAKyB,MAAQ,CAAE+C,QAAQ,GAFNxE,wEAMjB,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuB4D,QAAS1D,KAAKuD,aAClD5D,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAS,eAAAzD,OAAiB2D,KAAKU,MAAM+C,OAAS,GAAK,SACpDzD,KAAKZ,MAAMmD,OAAOpF,IAAI,SAAAwG,GAAS,IACtBC,EAAiBD,EAAjBC,OAAQvD,EAASsD,EAATtD,KAChB,OACEV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQxC,IAAKqG,EAAMzF,IAC/ByB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS+D,IAAKD,EAAOE,OAASF,EAAO,GAAGG,IAAK,GAAIC,IAAI,iBACpErE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQO,eAhBQE,IAAMC,YCGhDyD,0NAeJC,gBAAkB,SAAApF,GAChBG,EAAKG,MAAM+E,gBAAgBlF,EAAKG,MAAMgF,4FAbtCpE,KAAKZ,MAAM+E,gBAAgBnE,KAAKZ,MAAMgF,yCAItC,OACEzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAAzD,OAAK2D,KAAKZ,MAAMb,WAAa,MAAQ,MAArC,YAAsDmF,QAAS1D,KAAKkE,0BAV5D3D,IAAMC,YAyBnBC,cAJS,SAAAC,GACtB,MAAO,CAAE2D,UAAW3D,EAAMnC,aAGY,CAAE4F,gBHmBX,SAAAjG,GAC7B,MAAO,CAAE+B,KA3CsB,oBA2CG2B,QAAS3D,EAAeC,MGpB7CuC,CAA8CwD,oBCtBvDK,6MAqBJC,aAAe,SAAAC,GAAM,OAAIA,EAAOrH,IAAI,SAAAsH,GAAK,OAAI9E,EAAAC,EAAAC,cAAA,QAAMvC,IAAKmH,GAAQA,EAAnB,WAE7CC,iBAAmB,SAAAC,GACjB,OAAIA,EAAa,GACR,MACEA,GAAc,IAAMA,GAAc,GACpC,OACEA,GAAc,IAAMA,GAAc,GACpC,UACEA,EAAa,GACf,cAEA,uFA/BT3E,KAAKZ,MAAMwF,kBAAkB5E,KAAKZ,MAAMyF,KAAK3G,qCAGrC,IAAA4G,EACyC9E,KAAKZ,MAAMyF,KAApD3G,EADA4G,EACA5G,GAAI0F,EADJkB,EACIlB,OAAQvD,EADZyE,EACYzE,KAAMmE,EADlBM,EACkBN,OAAQG,EAD1BG,EAC0BH,WAClC,OACEhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc+D,IAAKD,EAAOE,OAASF,EAAO,GAAGG,IAAMgB,IAASf,IAAI,SAC/ErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,qBAAaQ,GACbV,EAAAC,EAAAC,cAAA,sBAAcG,KAAKuE,aAAaC,IAChC7E,EAAAC,EAAAC,cAAA,2BAAmBG,KAAK0E,iBAAiBC,IACzChF,EAAAC,EAAAC,cAACmF,EAAD,CAAeZ,OAAQlG,KAEzByB,EAAAC,EAAAC,cAACoF,EAAD,CAAoB1C,OAAQvC,KAAKZ,MAAMmD,iBAhBlBhC,IAAMC,WA0CpBC,cAJS,SAAAC,GACtB,MAAO,CAAE6B,OAAQ7B,EAAMwE,qBAGe,CAAEN,kBJfT,SAAA1G,GAAE,sBAAAiH,EAAAtE,OAAAC,EAAA,EAAAD,CAAAE,EAAAnB,EAAAoB,KAAI,SAAAoE,EAAMlE,GAAN,IAAAC,EAAA,OAAAJ,EAAAnB,EAAAwB,KAAA,SAAAiE,GAAA,cAAAA,EAAA/D,KAAA+D,EAAA9D,MAAA,cAAA8D,EAAA/D,KAAA,EAAA+D,EAAA9D,KAAA,EAEZ/D,IAAagE,IAAb,YAAAnF,OAA6B6B,EAA7B,YAFY,OAE7BiD,EAF6BkE,EAAA1D,KAGnCT,EAAS,CAACjB,KAjCqB,sBAiCM2B,QAAST,EAASU,KAAKE,QAHzBsD,EAAA9D,KAAA,gBAAA8D,EAAA/D,KAAA,EAAA+D,EAAA7C,GAAA6C,EAAA,SAKnCC,QAAQC,IAARF,EAAA7C,IALmC,yBAAA6C,EAAArD,SAAAoD,EAAA,iBAAJ,gBAAAI,GAAA,OAAAL,EAAAjD,MAAAlC,KAAAmC,YAAA,KIepB1B,CAAgD6D,GChD1CmB,cACnB,SAAAA,EAAYrG,GAAM,IAAAH,EAAA,OAAA4B,OAAAsC,EAAA,EAAAtC,CAAAb,KAAAyF,IAChBxG,EAAA4B,OAAAuC,EAAA,EAAAvC,CAAAb,KAAAa,OAAAwC,EAAA,EAAAxC,CAAA4E,GAAAnC,KAAAtD,KAAMZ,KAuBRsG,eAAiB,SAAAC,GACf,IAAMC,EAAU3G,EAAK4G,sBAAsBF,GACrCG,EAAU7G,EAAK8G,sBAAsBJ,GAC3C,SAAAtJ,OAAU4C,EAAK+G,gBAAgBF,GAA/B,KAAAzJ,OAA2C4C,EAAK+G,gBAAgBJ,KA3BhD3G,EA8BlB4G,sBAAwB,SAAAI,GAAY,OAAIC,KAAKC,MAAOF,EAAe,IAAQ,KA9BzDhH,EAgClB8G,sBAAwB,SAAAE,GAAY,OAAIC,KAAKC,MAAOF,EAAY,IAAkB,KAhChEhH,EAkClB+G,gBAAkB,SAAAI,GAAI,OAAIA,EAAO,GAAP,IAAA/J,OAAgB+J,GAASA,GAlCjCnH,EAoClBsE,YAAc,kBAAMtE,EAAKuE,SAAS,CAAEC,QAASxE,EAAKyB,MAAM+C,UAlCtDxE,EAAKyB,MAAQ,CAAE+C,QAAQ,GAFPxE,wEAKT,IAAAoH,EAAArG,KACP,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAS,gBAAAzD,OAAkB2D,KAAKU,MAAM+C,OAAS,SAAU,IAAMC,QAAS1D,KAAKuD,aAChF5D,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAS,UAAAzD,OAAY2D,KAAKU,MAAM+C,OAAS,GAAK,SAC/CzD,KAAKZ,MAAM2D,OAAO5F,IAAI,SAAAmJ,GACrB,OACE3G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQxC,IAAKgJ,EAAMpI,IAC/ByB,EAAAC,EAAAC,cAAA,YAAOyG,EAAMC,cACb5G,EAAAC,EAAAC,cAAA,YAAOyG,EAAMjG,MACbV,EAAAC,EAAAC,cAAA,YAAOwG,EAAKX,eAAeY,EAAME,0BAhBRjG,IAAMC,WCKzCiG,oNAqBJC,cAAgB,SAAA5E,GACd,IAAI6E,EAAW,GAUf,OATuB,IAAnB7E,EAAQgC,SACV6C,EAAW,IAEU,IAAnB7E,EAAQgC,SACV6C,EAAW7E,EAAQ,GAAGzB,MAEpByB,EAAQgC,OAAS,IACnB6C,EAAW,mBAENhH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoB6G,MAG7CC,mBAAqB,SAAAC,GACnB,OAAOA,EAAiB1J,IAAI,SAAA2J,GAAM,OAAInH,EAAAC,EAAAC,cAAA,QAAMvC,IAAKwJ,GAASA,EAApB,4FAlCtC9G,KAAKZ,MAAM2H,iBAAiB/G,KAAKZ,MAAMyF,KAAK3G,qCAGrC,IAAA4G,EACkD9E,KAAKZ,MAAMyF,KAA5D3G,EADD4G,EACC5G,GAAI0F,EADLkB,EACKlB,OAAQvD,EADbyE,EACazE,KAAMyB,EADnBgD,EACmBhD,QAASkF,EAD5BlC,EAC4BkC,kBACnC,OACErH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc+D,IAAKD,EAAOE,OAASF,EAAO,GAAGG,IAAK,GAAIC,IAAI,iBACzErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,qBAAaQ,GACbV,EAAAC,EAAAC,cAAA,yBAAiBG,KAAK0G,cAAc5E,IACpCnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,iBAA6CE,KAAK4G,mBAAmBI,IACrErH,EAAAC,EAAAC,cAACmF,EAAD,CAAeZ,OAAQlG,KAEzByB,EAAAC,EAAAC,cAACoH,EAAD,CAAalE,OAAQ/C,KAAKZ,MAAM2D,iBAhBZxC,IAAMC,YA4CnBC,cAJS,SAAAC,GACtB,MAAO,CAAEqC,OAAQrC,EAAMwG,cAGe,CAAEH,iBNPV,SAAA7I,GAAE,sBAAAiJ,EAAAtG,OAAAC,EAAA,EAAAD,CAAAE,EAAAnB,EAAAoB,KAAI,SAAAoG,EAAMlG,GAAN,IAAAC,EAAA,OAAAJ,EAAAnB,EAAAwB,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,cAAA8F,EAAA9F,KAAA,EACb/D,IAAagE,IAAb,WAAAnF,OAA4B6B,EAA5B,YADa,OAC9BiD,EAD8BkG,EAAA1F,KAEpCT,EAAS,CAACjB,KAxCsB,qBAwCI2B,QAAST,EAASU,KAAKE,QAFvB,wBAAAsF,EAAArF,SAAAoF,MAAJ,gBAAAE,GAAA,OAAAH,EAAAjF,MAAAlC,KAAAmC,YAAA,KMOnB1B,CAA+CgG,GC/CzCc,oNAgBnB7B,eAAiB,SAAAC,GACf,IAAMC,EAAU3G,EAAK4G,sBAAsBF,GACrCG,EAAU7G,EAAK8G,sBAAsBJ,GAC3C,SAAAtJ,OAAU4C,EAAK+G,gBAAgBF,GAA/B,KAAAzJ,OAA2C4C,EAAK+G,gBAAgBJ,OAGlEC,sBAAwB,SAAAI,GAAY,OAAIC,KAAKC,MAAOF,EAAe,IAAQ,OAE3EF,sBAAwB,SAAAE,GAAY,OAAIC,KAAKC,MAAOF,EAAY,IAAkB,OAElFD,gBAAkB,SAAAI,GAAI,OAAIA,EAAO,GAAP,IAAA/J,OAAgB+J,GAASA,KAEnD7C,YAAc,kBAAMtE,EAAKuE,SAAS,CAAEC,QAASxE,EAAKyB,MAAM+C,YAExDiD,cAAgB,SAAA5E,GAAO,OAAIA,EAAQ3E,IAAI,SAAAqK,GAAM,OAAI7H,EAAAC,EAAAC,cAAA,QAAMvC,IAAKkK,EAAOtJ,IAAKsJ,EAAOnH,KAA9B,iFA7BxC,IAAAyE,EACoC9E,KAAKZ,MAAMyF,KAA9C3G,EADD4G,EACC5G,GAAImC,EADLyE,EACKzE,KAAMyB,EADXgD,EACWhD,QAAS0E,EADpB1B,EACoB0B,YADpBiB,EAEuBzH,KAAKZ,MAAMyF,KAAKlB,MAAtCC,EAFD6D,EAEC7D,OAAQ8D,EAFTD,EAESC,UAChB,OACE/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc+D,IAAKD,EAAOE,OAASF,EAAO,GAAGG,IAAM,GAAKC,IAAI,iBACzErE,EAAAC,EAAAC,cAAA,YAAOQ,GACPV,EAAAC,EAAAC,cAAA,WAAMG,KAAK0G,cAAc5E,IACzBnC,EAAAC,EAAAC,cAAA,YAAO6H,GACP/H,EAAAC,EAAAC,cAAA,YAAOG,KAAK0F,eAAec,IAC3B7G,EAAAC,EAAAC,cAACmF,EAAD,CAAeZ,OAAQlG,YAXUqC,IAAMC,YC2BlCmH,6MAfbC,eAAiB,WAAM,IAAAC,EACE5I,EAAKG,MAApByF,EADagD,EACbhD,KACR,OAFqBgD,EACP5H,MAEZ,KAAKxB,EACH,OAAOkB,EAAAC,EAAAC,cAACiI,EAAD,CAAgBjD,KAAMA,IAC/B,KAAKnG,EACH,OAAOiB,EAAAC,EAAAC,cAACkI,EAAD,CAAelD,KAAMA,IAC9B,KAAKlG,EACH,OAAOgB,EAAAC,EAAAC,cAACmI,EAAD,CAAenD,KAAMA,IAC9B,QACE,OAAOlF,EAAAC,EAAAC,cAAA,kGAjBX,OACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACXE,KAAK4H,yBAJcrH,IAAMC,WCF5ByH,6MASJC,gBAAkB,SAAAtH,GAA+B,IAA7BkB,EAA6BlB,EAA7BkB,QAASS,EAAoB3B,EAApB2B,OAAQQ,EAAYnC,EAAZmC,OAC/BhB,EAAQ,GACR9B,EAAO,GACX,OAAQhB,EAAKG,MAAMuB,gBACjB,KAAKlC,EACHsD,EAAQD,EACR7B,EAAOxB,EACP,MACF,KAAKC,EACHqD,EAAQQ,EACRtC,EAAOvB,EACP,MACF,KAAKC,EACHoD,EAAQgB,EACR9C,EAAOtB,EACP,MACF,QACE,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,qDAIR,OAAOkC,EAAM5E,IAAI,SAAA0H,GAAI,OAAIlF,EAAAC,EAAAC,cAACsI,EAAD,CAAe7K,IAAKuH,EAAK3G,GAAI2G,KAAMA,EAAM5E,KAAMA,+EA9BxE,OACEN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXE,KAAKkI,gBAAgBlI,KAAKZ,eAJXmB,IAAMC,WAwCfC,cAJS,SAAAC,GACtB,MAAO,CAAEoB,QAASpB,EAAMoB,QAASS,OAAQ7B,EAAM6B,OAAQQ,OAAQrC,EAAMqC,OAAQpC,eAAgBD,EAAMC,iBAGtFF,CAAyBwH,GC3BzBG,mLAXX,OACEzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAACwI,EAAD,OAEF1I,EAAAC,EAAAC,cAACyI,EAAD,cAPU/H,IAAMC,0BC6DT+H,cAAgB,CAC7BzG,QAhEqB,WAAwB,IAAvBpB,EAAuByB,UAAA2B,OAAA,QAAA9G,IAAAmF,UAAA,GAAAA,UAAA,GAAf,GAAIqG,EAAWrG,UAAA2B,OAAA,EAAA3B,UAAA,QAAAnF,EAC7C,OAAQwL,EAAOvI,MACb,KAAKxB,EACL,OAAO+J,EAAO5G,QACd,QACE,OAAOlB,IA4DX6B,OAxDoB,WAAwB,IAAvB7B,EAAuByB,UAAA2B,OAAA,QAAA9G,IAAAmF,UAAA,GAAAA,UAAA,GAAf,GAAIqG,EAAWrG,UAAA2B,OAAA,EAAA3B,UAAA,QAAAnF,EAC5C,OAAQwL,EAAOvI,MACb,KAAKvB,EACL,OAAO8J,EAAO5G,QACd,QACA,OAAOlB,IAoDTqC,OAhDoB,WAAwB,IAAvBrC,EAAuByB,UAAA2B,OAAA,QAAA9G,IAAAmF,UAAA,GAAAA,UAAA,GAAf,GAAIqG,EAAWrG,UAAA2B,OAAA,EAAA3B,UAAA,QAAAnF,EAC5C,OAAQwL,EAAOvI,MACb,KAAKtB,EACL,OAAO6J,EAAO5G,QACd,QACA,OAAOlB,IA4CTwE,mBAxCgC,WAAwB,IAAvBxE,EAAuByB,UAAA2B,OAAA,QAAA9G,IAAAmF,UAAA,GAAAA,UAAA,GAAf,GAAIqG,EAAWrG,UAAA2B,OAAA,EAAA3B,UAAA,QAAAnF,EACxD,OAAQwL,EAAOvI,MACb,IX3B+B,sBW4B7B,OAAOuI,EAAO5G,QAChB,QACE,OAAOlB,IAoCXwG,YAhCyB,WAAwB,IAAvBxG,EAAuByB,UAAA2B,OAAA,QAAA9G,IAAAmF,UAAA,GAAAA,UAAA,GAAf,GAAIqG,EAAWrG,UAAA2B,OAAA,EAAA3B,UAAA,QAAAnF,EACjD,OAAQwL,EAAOvI,MACb,IXnC8B,qBWoC5B,OAAOuI,EAAO5G,QAChB,QACE,OAAOlB,IA4BXnC,WAxBuB,WAAwB,IAAvBmC,EAAuByB,UAAA2B,OAAA,QAAA9G,IAAAmF,UAAA,GAAAA,UAAA,GAAf,GAAIqG,EAAWrG,UAAA2B,OAAA,EAAA3B,UAAA,QAAAnF,EAC/C,OAAQwL,EAAOvI,MACb,IX3C6B,oBW4C7B,OAAOuI,EAAO5G,QACd,QACE,OAAOlB,IAoBXC,eAhB4B,WAAwB,IAAvBD,EAAuByB,UAAA2B,OAAA,QAAA9G,IAAAmF,UAAA,GAAAA,UAAA,GAAf,GAAIqG,EAAWrG,UAAA2B,OAAA,EAAA3B,UAAA,QAAAnF,EACpD,OAAQwL,EAAOvI,MACb,IXnDkC,yBWoDhC,OAAOuI,EAAO5G,QAChB,QACE,OAAOlB,MCrDP+H,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACPpJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAUP,MAAOA,GACf9I,EAAAC,EAAAC,cAACoJ,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.671edb62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noimage.1260c83f.jpg\";","import axios from 'axios';\r\nconst authorizeURL = \"https://accounts.spotify.com/authorize\";\r\nconst CLIENT_ID = \"70358d9ae7f84e6a83754104c6a91319\";\r\nconst ACTUAL_URL = `${window.location.protocol}//${window.location.host}`;\r\n\r\nconst SpotifyAPI = () => {\r\n  const ACCESS_TOKEN = getToken();\r\n  return axios.create({\r\n    baseURL: \"https://api.spotify.com/v1\",\r\n    headers: {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${ACCESS_TOKEN}`\r\n    }\r\n  });\r\n}\r\n\r\nconst getToken = () => {\r\n  const hashURL = window.location.hash;\r\n  if(hashURL !== \"\") {\r\n    const hashs = getHashParams(hashURL.replace(\"#\", \"\"));\r\n    const hash = hashs.find(hash => hash.access_token !== undefined);\r\n    return hash.access_token;\r\n  }\r\n  window.location = `${authorizeURL}?response_type=token&client_id=${CLIENT_ID}&redirect_uri=${ACTUAL_URL}`;\r\n}\r\n\r\nconst getHashParams = hash => {\r\n  const params = hash.split(\"&\");\r\n  return params.map(param => {\r\n    let keyValue = param.split(\"=\");\r\n    let key = keyValue[0];\r\n    let value = keyValue[1];\r\n    let hash = {};\r\n    hash[key] = value;\r\n    return hash;\r\n  });\r\n}\r\n\r\nexport const renewToken = status => {\r\n  if ( status === 401 ) {\r\n    window.location.hash = \"\";\r\n    getToken();\r\n  }\r\n}\r\n\r\nexport default SpotifyAPI;\r\n  ","// let favorites = [];\r\n\r\nexport const updateFavorite = id => {\r\n  const favorite = localStorage.getItem(id);\r\n  if (favorite === null) {\r\n    localStorage.setItem(id, \"false\");\r\n    return false;\r\n  }\r\n  const isFavorite = Boolean(favorite);\r\n  localStorage.setItem(id, `\"${!isFavorite}\"`);\r\n  return isFavorite;\r\n}\r\n/*\r\nexport const addFavorite = id => {\r\n  const isFavorite = (newFavorite !== null ) ? newFavorite.isFavorite : false;\r\n  const stringFavorite = `{\"id\": \"${id}\", \"isFavorite\": ${isFavorite}}`;\r\n  localStorage.setItem(id, stringFavorite);\r\n  updateFavoritesList(id);\r\n  const hasFavorite = favorites.some(favorite => favorite.id === id);\r\n  if (!hasFavorite) {\r\n    favorites.push(getFavorite(id));\r\n  }\r\n}\r\n\r\nexport const changeFavoriteStatus = id => {\r\n  const newFavorite = getFavorite(id);\r\n  const stringFavorite = `{\"id\": \"${id}\", \"isFavorite\": ${!newFavorite.isFavorite}}`;\r\n  localStorage.setItem(id, stringFavorite);\r\n  addFavorite(id); \r\n}\r\n\r\nconst updateFavoritesList = id => {\r\n  const updatedFavorites = favorites.map(favorite => {\r\n    const newFavorite = getFavorite(id);\r\n    if (newFavorite.id === favorite.id) {\r\n      return newFavorite;\r\n    }\r\n    return favorite;\r\n  });\r\n  favorites = updatedFavorites;\r\n}\r\n\r\nexport const getFavorite = id => JSON.parse();\r\n\r\nexport const getAllFavorites = () => favorites;\r\n\r\n*/","import SpotifyAPI, { renewToken } from '../apis/SpotifyAPI';\r\nimport { updateFavorite } from '../apis/FavoriteAPI';\r\nexport const TYPE_ARTISTS = \"artist\";\r\nexport const TYPE_ALBUMS = \"album\";\r\nexport const TYPE_TRACKS = \"track\";\r\nexport const FETCH_LATEST_ALBUMS = \"FETCH_LATEST_ALBUMS\";\r\nexport const FETCH_ALBUM_TRACKS = \"FETCH_ALBUM_TRACKS\";\r\nexport const FETCH_IS_FAVORITE = \"FETCH_IS_FAVORITE\";\r\nexport const FETCH_SEARCH_TERM_TYPE = \"FETCH_SEARCH_TERM_TYPE\";\r\n\r\nexport const fetchArtists = searchTerm => async dispatch => {\r\n  const response = await SpotifyAPI().get(`/search`, { \r\n    params: { q: searchTerm, type: TYPE_ARTISTS } \r\n  });\r\n  dispatch({type: TYPE_ARTISTS, payload: response.data.artists.items});\r\n}\r\n\r\nexport const fetchAlbums = searchTerm => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/search`, { \r\n      params: { q: searchTerm, type: TYPE_ALBUMS } \r\n    });\r\n    dispatch({type: TYPE_ALBUMS, payload: response.data.albums.items});\r\n  } catch ( err ) {\r\n    renewToken (err.response.data.error.status);\r\n  }\r\n}\r\n\r\nexport const fetchTracks = searchTerm => async dispatch => {\r\n  const response = await SpotifyAPI().get(`/search`, { \r\n    params: { q: searchTerm, type: TYPE_TRACKS } \r\n  });\r\n  dispatch({type: TYPE_TRACKS, payload: response.data.tracks.items});\r\n}\r\n\r\nexport const fetchLatestAlbums = id => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/artists/${id}/albums`);\r\n    dispatch({type: FETCH_LATEST_ALBUMS, payload: response.data.items});\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const fetchAlbumTracks = id => async dispatch => {\r\n  const response = await SpotifyAPI().get(`/albums/${id}/tracks`);\r\n  dispatch({type: FETCH_ALBUM_TRACKS, payload: response.data.items});\r\n}\r\n\r\nexport const fetchIsFavorite = id => {\r\n  return { type: FETCH_IS_FAVORITE, payload: updateFavorite(id) };\r\n}\r\n\r\nexport const fetchSearchTermType = termType => {\r\n  return { type: FETCH_SEARCH_TERM_TYPE, payload: termType };\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchArtists, fetchAlbums, fetchTracks, fetchSearchTermType, TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\nimport './SearchBar.scss';\r\n\r\nclass SearchBar extends React.Component {\r\n  render(){\r\n    return(\r\n      <form className=\"search-bar\" onSubmit={this.onSearchTermSubmit}>\r\n        <input type=\"text\" placeholder=\"Search\" ref=\"searchTerm\" />\r\n        <select defaultValue=\"default\" name=\"type\" ref=\"selectType\">\r\n          <option disabled=\"disabled\" value=\"default\">Search option</option>\r\n          <option value={TYPE_ARTISTS}>Artist</option>\r\n          <option value={TYPE_ALBUMS}>Album</option>\r\n          <option value={TYPE_TRACKS}>Track</option>\r\n        </select>\r\n        <button>Search</button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  onSearchTermSubmit = event => {\r\n    event.preventDefault();\r\n    const selectValue = this.refs.selectType.value;\r\n    this.props.fetchSearchTermType(selectValue);\r\n    const searchTerm = this.refs.searchTerm.value;\r\n    if(searchTerm === '') {\r\n      alert('Type a serch term');\r\n    } else {\r\n      switch (selectValue) {\r\n        case TYPE_ARTISTS:\r\n        this.props.fetchArtists(searchTerm);\r\n          break;\r\n        case TYPE_ALBUMS:\r\n          this.props.fetchAlbums(searchTerm);\r\n          break;\r\n        case TYPE_TRACKS:\r\n          this.props.fetchTracks(searchTerm);\r\n          break;\r\n        default:\r\n          alert('Select type value');\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { searchTermType: state.searchTermType };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchArtists, fetchAlbums, fetchTracks, fetchSearchTermType  })(SearchBar);","import React from 'react';\r\n\r\nexport default class ArtistLatestAlbums extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { active: false }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"artist-latest-albums\" onClick={this.toggleClass}>\r\n        <h4>Artist's latest albums</h4>\r\n        <ul className={`albums-list ${this.state.active ? \"\" : \"hide\"}`} >\r\n          {this.props.albums.map(album => {\r\n            const { images, name } = album;\r\n            return (\r\n              <li className=\"album\" key={album.id}>\r\n                <img className=\"folder\" src={images.length ? images[0].url: \"\"} alt=\"Album folder\" />\r\n                <span className=\"name\">{name}</span>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleClass = () => this.setState({active: !this.state.active});\r\n\r\n}","import React from 'react';\r\nimport './FavoriteItems.scss';\r\nimport { connect } from 'react-redux';\r\nimport { fetchIsFavorite } from '../actions';\r\n\r\nclass FavoriteItems extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchIsFavorite(this.props.itemId);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"FavoriteItems\">\r\n        <span>Favorite: </span>\r\n        <i className={`${this.props.isFavorite ? \"fas\" : \"far\"} fa-star`} onClick={this.onFavoriteClick}></i>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onFavoriteClick = event => {\r\n    this.props.fetchIsFavorite(this.props.itemId);\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { iFavorite: state.isFavorite };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchIsFavorite })(FavoriteItems);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ArtistLatestAlbums from './ArtistLatestAlbums';\r\nimport { fetchLatestAlbums } from '../actions';\r\nimport './ArtistListItem.scss';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport noImage from '../images/noimage.jpg';\r\n\r\nclass ArtistListItem extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchLatestAlbums(this.props.item.id);\r\n  }\r\n\r\n  render () {\r\n    const { id, images, name, genres, popularity } = this.props.item;\r\n    return (\r\n      <div className=\"artist-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url : noImage} alt=\"Song\" />\r\n        <div className=\"description\">\r\n          <span>Name: {name}</span>\r\n          <div>Genres: {this.renderGenres(genres)}</div>\r\n          <span>Popularity: {this.renderPopularity(popularity)}</span>\r\n          <FavoriteItems itemId={id} />\r\n        </div>\r\n        <ArtistLatestAlbums albums={this.props.albums} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderGenres = genres => genres.map(genre => <span key={genre}>{genre}, </span>);\r\n  \r\n  renderPopularity = popularity => {\r\n    if (popularity > 80) {\r\n      return \"Hot\";\r\n    } else if (popularity >= 60 && popularity <= 79) {\r\n      return \"Cool\";\r\n    } else if (popularity >= 30 && popularity <= 59) {\r\n      return \"Regular\";\r\n    } else if (popularity < 30) {\r\n      return \"Underground\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { albums: state.artistLatestAlbums };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchLatestAlbums })(ArtistListItem);","import React from 'react';\r\n\r\nexport default class AlbumTracks extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { active: false };\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className={`album-tracks ${this.state.active ? \"spread\": \"\"}`} onClick={this.toggleClass}>\r\n        <h4>Tracks</h4>\r\n        <ul className={`tracks ${this.state.active ? \"\" : \"hide\"}`}>\r\n          {this.props.tracks.map(track => {\r\n            return (\r\n              <li className=\"track\" key={track.id}>\r\n                <span>{track.track_number}</span>\r\n                <span>{track.name}</span>\r\n                <span>{this.renderDuration(track.duration_ms)}</span>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDuration = duration => {\r\n    const seconds = this.millisecondsToSeconds(duration)\r\n    const minutes = this.millisecondsToMinutes(duration);\r\n    return `${this.buildNumberTime(minutes)}:${this.buildNumberTime(seconds)}`;\r\n  }\r\n  \r\n  millisecondsToSeconds = milliseconds => Math.floor((milliseconds / 1000) % 60);\r\n  \r\n  millisecondsToMinutes = milliseconds => Math.floor((milliseconds / (1000 * 60)) % 60);\r\n  \r\n  buildNumberTime = time => time < 10 ? `0${time}` : time;\r\n\r\n  toggleClass = () => this.setState({ active: !this.state.active });\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAlbumTracks } from '../actions';\r\nimport AlbumTracks from './AlbumTracks';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport './AlbumListItem.scss';\r\n\r\nclass AlbumListItem extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchAlbumTracks(this.props.item.id);\r\n  }\r\n\r\n  render() {\r\n    const { id, images, name, artists, available_markets } = this.props.item;\r\n    return(\r\n      <div className=\"album-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url: \"\"} alt=\"Album folder\" />\r\n        <div className=\"description\">\r\n          <span>Name: {name}</span>\r\n          <div>Artist(s): {this.renderArtists(artists)}</div>\r\n          <div className=\"availability\">Availability: {this.renderAvailability(available_markets)}</div>\r\n          <FavoriteItems itemId={id} />\r\n        </div>\r\n        <AlbumTracks tracks={this.props.tracks} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderArtists = artists => {\r\n    let spanText = \"\";\r\n    if (artists.length === 0) {\r\n      spanText = \"\";\r\n    }\r\n    if (artists.length === 1) {\r\n      spanText = artists[0].name;\r\n    }\r\n    if (artists.length > 1) {\r\n      spanText = \"Various artists\";\r\n    }\r\n    return <span className=\"available-market\">{spanText}</span>;\r\n  }\r\n\r\n  renderAvailability = availableMarkets => {\r\n    return availableMarkets.map(market => <span key={market}>{market}, </span>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { tracks: state.albumTracks };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchAlbumTracks })(AlbumListItem);","import React from 'react';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport './TrackListItem.scss';\r\n\r\nexport default class TrackListItem extends React.Component {\r\n  render() {\r\n    const { id, name, artists, duration_ms } = this.props.item;\r\n    const { images, albumName } = this.props.item.album;\r\n    return(\r\n      <div className=\"track-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url : \"\" } alt=\"Album folder\" />\r\n          <span>{name}</span>\r\n          <div>{this.renderArtists(artists)}</div>\r\n          <span>{albumName}</span>\r\n          <span>{this.renderDuration(duration_ms)}</span>\r\n          <FavoriteItems itemId={id} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDuration = duration => {\r\n    const seconds = this.millisecondsToSeconds(duration)\r\n    const minutes = this.millisecondsToMinutes(duration);\r\n    return `${this.buildNumberTime(minutes)}:${this.buildNumberTime(seconds)}`;\r\n  }\r\n  \r\n  millisecondsToSeconds = milliseconds => Math.floor((milliseconds / 1000) % 60);\r\n  \r\n  millisecondsToMinutes = milliseconds => Math.floor((milliseconds / (1000 * 60)) % 60);\r\n  \r\n  buildNumberTime = time => time < 10 ? `0${time}` : time;\r\n\r\n  toggleClass = () => this.setState({ active: !this.state.active });\r\n\r\n  renderArtists = artists => artists.map(artist => <span key={artist.id}>{artist.name}, </span>);\r\n}","import React from 'react';\r\nimport './MusicListItem.scss';\r\nimport { TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\nimport ArtistListItem from './ArtistListItem';\r\nimport AlbumListItem from './AlbumListItem';\r\nimport TrackListItem from './TrackListItem';\r\n\r\nclass MusicListItem extends React.Component {\r\n  render () {\r\n    return (\r\n      <li className=\"music-list-item\">\r\n        {this.selectListItem()}\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  selectListItem = () => {\r\n    const { item, type } = this.props;\r\n    switch(type) {\r\n      case TYPE_ARTISTS:\r\n        return <ArtistListItem item={item} />;\r\n      case TYPE_ALBUMS:\r\n        return <AlbumListItem item={item} />\r\n      case TYPE_TRACKS:\r\n        return <TrackListItem item={item} />\r\n      default:\r\n        return <div>Not found</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MusicListItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MusicListItem from './MusicListItem';\r\nimport { TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\n\r\nclass MusicList extends React.Component {\r\n  render(){\r\n    return(\r\n      <ul className=\"music-list\">\r\n        {this.renderMusicList(this.props)}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  renderMusicList = ({artists, albums, tracks}) => {\r\n    let items = [];\r\n    let type = \"\";\r\n    switch (this.props.searchTermType) {\r\n      case TYPE_ARTISTS:\r\n        items = artists;\r\n        type = TYPE_ARTISTS;\r\n        break\r\n      case TYPE_ALBUMS: \r\n        items = albums;\r\n        type = TYPE_ALBUMS;\r\n        break;\r\n      case TYPE_TRACKS:\r\n        items = tracks;\r\n        type = TYPE_TRACKS;\r\n        break;\r\n      default:\r\n        return (\r\n          <div className=\"loading\">\r\n            <span>Search for an artist, album or track</span>\r\n          </div>\r\n        );\r\n    }\r\n    return items.map(item => <MusicListItem key={item.id} item={item} type={type} />);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { artists: state.artists, albums: state.albums, tracks: state.tracks, searchTermType: state.searchTermType };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MusicList);","import React from 'react';\nimport './App.scss';\nimport SearchBar from './components/SearchBar';\nimport MusicList from './components/MusicList';\n\nclass App extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <SearchBar />\n        </header>\n        <MusicList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { TYPE_ARTISTS,  TYPE_ALBUMS, TYPE_TRACKS, FETCH_LATEST_ALBUMS, FETCH_ALBUM_TRACKS, FETCH_IS_FAVORITE, FETCH_SEARCH_TERM_TYPE } from '../actions';\r\n\r\nconst artistsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_ARTISTS:\r\n    return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst albumsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_ALBUMS:\r\n    return action.payload;\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\nconst tracksReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_TRACKS:\r\n    return action.payload;\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\nconst latestArtistAlbumsReducer = (state = [], action) => { \r\n  switch (action.type) {\r\n    case FETCH_LATEST_ALBUMS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst albumTracksReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALBUM_TRACKS: \r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst favoritesReducer = (state = [], action) => { \r\n  switch (action.type) {\r\n    case FETCH_IS_FAVORITE:\r\n    return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst searchTermTypeReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_TERM_TYPE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  artists: artistsReducer,\r\n  albums: albumsReducer,\r\n  tracks: tracksReducer,\r\n  artistLatestAlbums: latestArtistAlbumsReducer,\r\n  albumTracks: albumTracksReducer,\r\n  isFavorite: favoritesReducer,\r\n  searchTermType: searchTermTypeReducer\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root'));\n"],"sourceRoot":""}