{"version":3,"sources":["images/noimage.jpg","apis/SpotifyAPI.js","apis/FavoriteAPI.js","actions/index.js","components/SearchBar.js","components/ArtistLatestAlbums.js","components/FavoriteItems.js","components/ArtistListItem.js","components/AlbumTracks.js","components/AlbumListItem.js","components/TrackListItem.js","components/MusicListItem.js","components/MusicList.js","App.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","href","window","location","ACTUAL_URL","substr","length","getToken","hashURL","hash","getHashParams","replace","find","undefined","access_token","concat","split","map","param","keyValue","key","value","renewToken","SpotifyAPI","ACCESS_TOKEN","axios","create","baseURL","headers","Accept","Content-Type","Authorization","favorites","updateFavorite","id","isFavorite","getFavorite","newFavoriteStatus","changeFavoriteStatus","addFavorite","favorite","localStorage","getItem","favoriteStatus","setItem","toString","newFavorite","some","newFavorites","push","TYPE_ARTISTS","TYPE_ALBUMS","TYPE_TRACKS","SEARCH_TERM","TYPE","SearchBar","onSearchTermSubmit","event","preventDefault","selectValue","_this","refs","selectType","searchTerm","executeSearch","type","props","fetchSearchTermType","alert","storeSearchParams","fetchArtists","fetchAlbums","fetchTracks","this","react_default","a","createElement","className","onSubmit","placeholder","ref","defaultValue","name","disabled","React","Component","connect","state","searchTermType","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","get","params","q","sent","payload","data","artists","items","t0","stop","_x","apply","arguments","_ref2","_callee2","_context2","albums","_x2","_ref3","_callee3","_context3","tracks","_x3","termType","ArtistLatestAlbums","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleClass","setState","active","onClick","album","images","src","url","alt","FavoriteItems","onFavoriteClick","itemId","fetchFavorites","_this2","ArtistListItem","renderGenres","genres","genre","renderPopularity","popularity","fetchLatestAlbums","item","_this$props$item","noImage","src_components_FavoriteItems","ArtistLatestAlbums_ArtistLatestAlbums","artistLatestAlbums","_ref4","_callee4","_context4","_x4","AlbumTracks","renderDuration","duration","seconds","millisecondsToSeconds","minutes","millisecondsToMinutes","buildNumberTime","milliseconds","Math","floor","time","track","track_number","duration_ms","AlbumListItem","renderArtists","spanText","renderAvailability","availableMarkets","market","fetchAlbumTracks","available_markets","AlbumTracks_AlbumTracks","albumTracks","_ref5","_callee5","_context5","_x5","TrackListItem","artist","_this$props$item$albu","albumName","MusicListItem","selectListItem","_this$props","src_components_ArtistListItem","src_components_AlbumListItem","TrackListItem_TrackListItem","MusicList","renderMusicList","src_components_MusicListItem","App","src_components_SearchBar","components_MusicList","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9b8e2fb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noimage.1260c83f.jpg\";","import axios from 'axios';\r\nconst authorizeURL = \"https://accounts.spotify.com/authorize\";\r\nconst CLIENT_ID = \"70358d9ae7f84e6a83754104c6a91319\";\r\nconst href = window.location.href;\r\nconst ACTUAL_URL = href.substr(0, href.length-1);\r\n\r\nconst SpotifyAPI = () => {\r\n  const ACCESS_TOKEN = getToken();\r\n  return axios.create({\r\n    baseURL: \"https://api.spotify.com/v1\",\r\n    headers: {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${ACCESS_TOKEN}`\r\n    }\r\n  });\r\n}\r\n\r\nconst getToken = () => {\r\n  const hashURL = window.location.hash;\r\n  if(hashURL !== \"\") {\r\n    const hashs = getHashParams(hashURL.replace(\"#\", \"\"));\r\n    const hash = hashs.find(hash => hash.access_token !== undefined);\r\n    return hash.access_token;\r\n  }\r\n  window.location = `${authorizeURL}?response_type=token&client_id=${CLIENT_ID}&redirect_uri=${ACTUAL_URL}`;\r\n}\r\n\r\nconst getHashParams = hash => {\r\n  const params = hash.split(\"&\");\r\n  return params.map(param => {\r\n    let keyValue = param.split(\"=\");\r\n    let key = keyValue[0];\r\n    let value = keyValue[1];\r\n    let hash = {};\r\n    hash[key] = value;\r\n    return hash;\r\n  });\r\n}\r\n\r\nexport const renewToken = () => {\r\n  window.location.hash = \"\";\r\n  getToken();\r\n}\r\n\r\nexport default SpotifyAPI;\r\n  ","let favorites = [];\r\n\r\nexport const getFavorites = () => favorites;\r\n\r\nexport const updateFavorite = id => {\r\n  const isFavorite = getFavorite(id);\r\n  const newFavoriteStatus = changeFavoriteStatus(id, isFavorite);\r\n  const newFavorite = {id: id, isFavorite: newFavoriteStatus};\r\n  addFavorite(newFavorite);\r\n}\r\n\r\nconst getFavorite = id => {\r\n  const favorite = localStorage.getItem(id);\r\n  if (favorite === \"true\") return true;\r\n  else if (favorite === \"false\") return false;\r\n  return changeFavoriteStatus(id, false);\r\n}\r\n\r\nconst changeFavoriteStatus = (id, isFavorite) => {\r\n  const favoriteStatus = !isFavorite;\r\n  localStorage.setItem(id, (favoriteStatus).toString());\r\n  return favoriteStatus;\r\n}\r\n\r\nconst addFavorite = newFavorite => {\r\n  const hasFavorite = favorites.some(favorite => favorite.id === newFavorite.id)\r\n  if (hasFavorite) {\r\n    const newFavorites = favorites.map(favorite => {\r\n      if (newFavorite.id === favorite.id) {\r\n        return newFavorite;\r\n      }\r\n      return favorite;\r\n    });\r\n    favorites = newFavorites;\r\n  } else {\r\n    favorites.push(newFavorite);\r\n  }\r\n}\r\n","import SpotifyAPI, { renewToken } from '../apis/SpotifyAPI';\r\nimport { getFavorites } from '../apis/FavoriteAPI';\r\nexport const TYPE_ARTISTS = \"artist\";\r\nexport const TYPE_ALBUMS = \"album\";\r\nexport const TYPE_TRACKS = \"track\";\r\nexport const FETCH_LATEST_ALBUMS = \"FETCH_LATEST_ALBUMS\";\r\nexport const FETCH_ALBUM_TRACKS = \"FETCH_ALBUM_TRACKS\";\r\nexport const FETCH_FAVORITES = \"FETCH_FAVORITES\";\r\nexport const FETCH_SEARCH_TERM_TYPE = \"FETCH_SEARCH_TERM_TYPE\";\r\n\r\nexport const fetchArtists = searchTerm => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/search`, { \r\n      params: { q: searchTerm, type: TYPE_ARTISTS } \r\n    }); \r\n    dispatch({type: TYPE_ARTISTS, payload: response.data.artists.items});\r\n  } catch ( err ) {\r\n    renewToken ();\r\n  }\r\n}\r\n\r\nexport const fetchAlbums = searchTerm => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/search`, { \r\n      params: { q: searchTerm, type: TYPE_ALBUMS } \r\n    });\r\n    dispatch({type: TYPE_ALBUMS, payload: response.data.albums.items});\r\n  } catch ( err ) {\r\n    renewToken ();\r\n  }\r\n}\r\n\r\nexport const fetchTracks = searchTerm => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/search`, { \r\n      params: { q: searchTerm, type: TYPE_TRACKS } \r\n    });\r\n    dispatch({type: TYPE_TRACKS, payload: response.data.tracks.items});\r\n  } catch ( err ) {\r\n    renewToken ();\r\n  }\r\n}\r\n\r\nexport const fetchLatestAlbums = id => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/artists/${id}/albums`);\r\n    dispatch({type: FETCH_LATEST_ALBUMS, payload: response.data.items});\r\n  } catch ( err ) {\r\n    renewToken ();\r\n  }\r\n}\r\n\r\nexport const fetchAlbumTracks = id => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/albums/${id}/tracks`);\r\n    dispatch({type: FETCH_ALBUM_TRACKS, payload: response.data.items});\r\n  } catch ( err ) {\r\n    renewToken ();\r\n  }\r\n}\r\n\r\nexport const fetchFavorites = () => {\r\n  const response = getFavorites()\r\n  return { type: FETCH_FAVORITES, payload: response };\r\n}\r\n\r\nexport const fetchSearchTermType = termType => {\r\n  return { type: FETCH_SEARCH_TERM_TYPE, payload: termType };\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchArtists, fetchAlbums, fetchTracks, fetchSearchTermType, TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\nimport './SearchBar.scss';\r\nconst SEARCH_TERM = \"SEARCH_TERM\";\r\nconst TYPE = \"TYPE\";\r\n\r\nclass SearchBar extends React.Component {\r\n  componentDidMount() { \r\n    const searchTerm = localStorage.getItem(SEARCH_TERM);\r\n    const type = localStorage.getItem(TYPE);\r\n    if (searchTerm !== null && type !== null && window.location.hash !== \"\") {\r\n      this.executeSearch(searchTerm, type);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <form className=\"search-bar\" onSubmit={this.onSearchTermSubmit}>\r\n        <input type=\"text\" placeholder=\"Search\" ref=\"searchTerm\" />\r\n        <select defaultValue=\"default\" name=\"type\" ref=\"selectType\">\r\n          <option disabled=\"disabled\" value=\"default\">Search option</option>\r\n          <option value={TYPE_ARTISTS}>Artist</option>\r\n          <option value={TYPE_ALBUMS}>Album</option>\r\n          <option value={TYPE_TRACKS}>Track</option>\r\n        </select>\r\n        <button>Search</button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  onSearchTermSubmit = event => {\r\n    event.preventDefault();\r\n    const selectValue = this.refs.selectType.value;\r\n    const searchTerm = this.refs.searchTerm.value;\r\n    this.executeSearch(searchTerm, selectValue);\r\n  }\r\n  \r\n  executeSearch = (searchTerm, type) => {\r\n    this.props.fetchSearchTermType(type);\r\n    if(searchTerm === '') {\r\n      alert('Type a serch term');\r\n    } else {\r\n      switch (type) {\r\n        case TYPE_ARTISTS:\r\n          this.storeSearchParams(searchTerm, type);\r\n          this.props.fetchArtists(searchTerm);\r\n          break;\r\n        case TYPE_ALBUMS:\r\n          this.storeSearchParams(searchTerm, type);\r\n          this.props.fetchAlbums(searchTerm);\r\n          break;\r\n        case TYPE_TRACKS:\r\n          this.storeSearchParams(searchTerm, type);\r\n          this.props.fetchTracks(searchTerm);\r\n          break;\r\n        default:\r\n          alert('Select type value');\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  storeSearchParams = (searchTerm, type) => {\r\n    localStorage.setItem(SEARCH_TERM, searchTerm);\r\n    localStorage.setItem(TYPE, type);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { searchTermType: state.searchTermType };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchArtists, fetchAlbums, fetchTracks, fetchSearchTermType  })(SearchBar);","import React from 'react';\r\n\r\nexport default class ArtistLatestAlbums extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { active: false }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"artist-latest-albums\" onClick={this.toggleClass}>\r\n        <button>Artist's latest albums</button>\r\n        <ul className={`albums-list ${this.state.active ? \"\" : \"hide\"}`} >\r\n          {this.props.albums.map(album => {\r\n            const { images, name } = album;\r\n            return (\r\n              <li className=\"album\" key={album.id}>\r\n                <img className=\"folder\" src={images.length ? images[0].url: \"\"} alt=\"Album folder\" />\r\n                <span className=\"name\">{name}</span>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleClass = () => this.setState({active: !this.state.active});\r\n\r\n}","import React from 'react';\r\nimport './FavoriteItems.scss';\r\nimport { connect } from 'react-redux';\r\nimport { fetchFavorites } from '../actions';\r\nimport { updateFavorite } from '../apis/FavoriteAPI';\r\n\r\nclass FavoriteItems extends React.Component {\r\n\r\n  componentDidMount() {\r\n    updateFavorite(this.props.itemId);\r\n    this.props.fetchFavorites();\r\n  }\r\n\r\n  render(){\r\n    const getFavorite = this.props.favorites.find(favorite => favorite.id === this.props.itemId);\r\n    const favorite = getFavorite === undefined ? false : getFavorite;\r\n    return(\r\n      <div className=\"FavoriteItems\">\r\n        <span>Favorite: </span>\r\n        <i className={`${favorite.isFavorite ? \"fas\" : \"far\"} fa-star`} onClick={this.onFavoriteClick}></i>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onFavoriteClick = () => {\r\n    updateFavorite(this.props.itemId);\r\n    this.props.fetchFavorites();\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { favorites: state.favorites };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchFavorites })(FavoriteItems);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ArtistLatestAlbums from './ArtistLatestAlbums';\r\nimport { fetchLatestAlbums } from '../actions';\r\nimport './ArtistListItem.scss';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport noImage from '../images/noimage.jpg';\r\n\r\nclass ArtistListItem extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchLatestAlbums(this.props.item.id);\r\n  }\r\n\r\n  render () {\r\n    const { id, images, name, genres, popularity } = this.props.item;\r\n    return (\r\n      <div className=\"artist-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url : noImage} alt=\"Song\" />\r\n        <div className=\"description\">\r\n          <span>Name: {name}</span>\r\n          <div>Genres: {this.renderGenres(genres)}</div>\r\n          <span>Popularity: {this.renderPopularity(popularity)}</span>\r\n          <FavoriteItems itemId={id} />\r\n        </div>\r\n        <ArtistLatestAlbums albums={this.props.albums} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderGenres = genres => genres.map(genre => <span key={genre}>{genre}, </span>);\r\n  \r\n  renderPopularity = popularity => {\r\n    if (popularity > 80) {\r\n      return \"Hot\";\r\n    } else if (popularity >= 60 && popularity <= 79) {\r\n      return \"Cool\";\r\n    } else if (popularity >= 30 && popularity <= 59) {\r\n      return \"Regular\";\r\n    } else if (popularity < 30) {\r\n      return \"Underground\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { albums: state.artistLatestAlbums };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchLatestAlbums })(ArtistListItem);","import React from 'react';\r\n\r\nexport default class AlbumTracks extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { active: false };\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className={`album-tracks ${this.state.active ? \"spread\": \"\"}`} onClick={this.toggleClass}>\r\n        <button>Tracks</button>\r\n        <ul className={`tracks ${this.state.active ? \"\" : \"hide\"}`}>\r\n          {this.props.tracks.map(track => {\r\n            return (\r\n              <li className=\"track\" key={track.id}>\r\n                <span>{track.track_number}</span>\r\n                <span>{track.name}</span>\r\n                <span>{this.renderDuration(track.duration_ms)}</span>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDuration = duration => {\r\n    const seconds = this.millisecondsToSeconds(duration)\r\n    const minutes = this.millisecondsToMinutes(duration);\r\n    return `${this.buildNumberTime(minutes)}:${this.buildNumberTime(seconds)}`;\r\n  }\r\n  \r\n  millisecondsToSeconds = milliseconds => Math.floor((milliseconds / 1000) % 60);\r\n  \r\n  millisecondsToMinutes = milliseconds => Math.floor((milliseconds / (1000 * 60)) % 60);\r\n  \r\n  buildNumberTime = time => time < 10 ? `0${time}` : time;\r\n\r\n  toggleClass = () => this.setState({ active: !this.state.active });\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAlbumTracks } from '../actions';\r\nimport AlbumTracks from './AlbumTracks';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport './AlbumListItem.scss';\r\nimport noImage from '../images/noimage.jpg';\r\n\r\nclass AlbumListItem extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchAlbumTracks(this.props.item.id);\r\n  }\r\n\r\n  render() {\r\n    const { id, images, name, artists, available_markets } = this.props.item;\r\n    return(\r\n      <div className=\"album-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url : noImage} alt=\"Album folder\" />\r\n        <div className=\"description\">\r\n          <span>Name: {name}</span>\r\n          <div>Artist(s): {this.renderArtists(artists)}</div>\r\n          <div className=\"availability\">Availability: {this.renderAvailability(available_markets)}</div>\r\n          <FavoriteItems itemId={id} />\r\n        </div>\r\n        <AlbumTracks tracks={this.props.tracks} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderArtists = artists => {\r\n    let spanText = \"\";\r\n    if (artists.length === 0) {\r\n      spanText = \"\";\r\n    }\r\n    if (artists.length === 1) {\r\n      spanText = artists[0].name;\r\n    }\r\n    if (artists.length > 1) {\r\n      spanText = \"Various artists\";\r\n    }\r\n    return <span className=\"available-market\">{spanText}</span>;\r\n  }\r\n\r\n  renderAvailability = availableMarkets => {\r\n    return availableMarkets.map(market => <span key={market}>{market}, </span>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { tracks: state.albumTracks };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchAlbumTracks })(AlbumListItem);","import React from 'react';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport './TrackListItem.scss';\r\nimport noImage from '../images/noimage.jpg';\r\n\r\nexport default class TrackListItem extends React.Component {\r\n  render() {\r\n    const { id, name, artists, duration_ms } = this.props.item;\r\n    const { images, albumName } = this.props.item.album;\r\n    return(\r\n      <div className=\"track-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url : noImage} alt=\"Album folder\" />\r\n          <span>{name}</span>\r\n          <div>{this.renderArtists(artists)}</div>\r\n          <span>{albumName}</span>\r\n          <span>{this.renderDuration(duration_ms)}</span>\r\n          <FavoriteItems itemId={id} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDuration = duration => {\r\n    const seconds = this.millisecondsToSeconds(duration)\r\n    const minutes = this.millisecondsToMinutes(duration);\r\n    return `${this.buildNumberTime(minutes)}:${this.buildNumberTime(seconds)}`;\r\n  }\r\n  \r\n  millisecondsToSeconds = milliseconds => Math.floor((milliseconds / 1000) % 60);\r\n  \r\n  millisecondsToMinutes = milliseconds => Math.floor((milliseconds / (1000 * 60)) % 60);\r\n  \r\n  buildNumberTime = time => time < 10 ? `0${time}` : time;\r\n\r\n  toggleClass = () => this.setState({ active: !this.state.active });\r\n\r\n  renderArtists = artists => artists.map(artist => <span key={artist.id}>{artist.name}, </span>);\r\n}","import React from 'react';\r\nimport './MusicListItem.scss';\r\nimport { TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\nimport ArtistListItem from './ArtistListItem';\r\nimport AlbumListItem from './AlbumListItem';\r\nimport TrackListItem from './TrackListItem';\r\n\r\nclass MusicListItem extends React.Component {\r\n  render () {\r\n    return (\r\n      <li className=\"music-list-item\">\r\n        {this.selectListItem()}\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  selectListItem = () => {\r\n    const { item, type } = this.props;\r\n    switch(type) {\r\n      case TYPE_ARTISTS:\r\n        return <ArtistListItem item={item} />;\r\n      case TYPE_ALBUMS:\r\n        return <AlbumListItem item={item} />\r\n      case TYPE_TRACKS:\r\n        return <TrackListItem item={item} />\r\n      default:\r\n        return <div>Not found</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MusicListItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MusicListItem from './MusicListItem';\r\nimport { TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\n\r\nclass MusicList extends React.Component {\r\n  render(){\r\n    return(\r\n      <ul className=\"music-list\">\r\n        {this.renderMusicList(this.props)}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  renderMusicList = ({artists, albums, tracks}) => {\r\n    let items = [];\r\n    let type = \"\";\r\n    switch (this.props.searchTermType) {\r\n      case TYPE_ARTISTS:\r\n        items = artists;\r\n        type = TYPE_ARTISTS;\r\n        break\r\n      case TYPE_ALBUMS: \r\n        items = albums;\r\n        type = TYPE_ALBUMS;\r\n        break;\r\n      case TYPE_TRACKS:\r\n        items = tracks;\r\n        type = TYPE_TRACKS;\r\n        break;\r\n      default:\r\n        return (\r\n          <div className=\"loading\">\r\n            <span>Search for an artist, album or track</span>\r\n          </div>\r\n        );\r\n    }\r\n    return items.map(item => <MusicListItem key={item.id} item={item} type={type} />);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { artists: state.artists, albums: state.albums, tracks: state.tracks, searchTermType: state.searchTermType };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MusicList);","import React from 'react';\r\nimport './App.scss';\r\nimport SearchBar from './components/SearchBar';\r\nimport MusicList from './components/MusicList';\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <SearchBar />\r\n        </header>\r\n        <MusicList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { TYPE_ARTISTS,  TYPE_ALBUMS, TYPE_TRACKS, FETCH_LATEST_ALBUMS, FETCH_ALBUM_TRACKS, FETCH_FAVORITES, FETCH_SEARCH_TERM_TYPE } from '../actions';\r\n\r\nconst artistsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_ARTISTS:\r\n    return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst albumsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_ALBUMS:\r\n    return action.payload;\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\nconst tracksReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_TRACKS:\r\n    return action.payload;\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\nconst latestArtistAlbumsReducer = (state = [], action) => { \r\n  switch (action.type) {\r\n    case FETCH_LATEST_ALBUMS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst albumTracksReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALBUM_TRACKS: \r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst favoritesReducer = (state = [], action) => { \r\n  switch (action.type) {\r\n    case FETCH_FAVORITES:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst searchTermTypeReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_TERM_TYPE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  artists: artistsReducer,\r\n  albums: albumsReducer,\r\n  tracks: tracksReducer,\r\n  artistLatestAlbums: latestArtistAlbumsReducer,\r\n  albumTracks: albumTracksReducer,\r\n  favorites: favoritesReducer,\r\n  searchTermType: searchTermTypeReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, \r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}