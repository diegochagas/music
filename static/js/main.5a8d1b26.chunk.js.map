{"version":3,"sources":["images/noimage.jpg","apis/SpotifyAPI.js","apis/FavoriteAPI.js","actions/index.js","components/SearchBar.js","components/ArtistLatestAlbums.js","components/FavoriteItems.js","components/ArtistListItem.js","components/AlbumTracks.js","components/AlbumListItem.js","components/TrackListItem.js","components/MusicListItem.js","components/MusicList.js","App.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","href","window","location","ACTUAL_URL","substr","length","getToken","hashURL","hash","getHashParams","replace","find","undefined","access_token","concat","split","map","param","keyValue","key","value","renewToken","status","SpotifyAPI","ACCESS_TOKEN","axios","create","baseURL","headers","Accept","Content-Type","Authorization","favorites","updateFavorite","id","isFavorite","getFavorite","newFavoriteStatus","changeFavoriteStatus","addFavorite","favorite","localStorage","getItem","favoriteStatus","setItem","toString","newFavorite","some","newFavorites","push","TYPE_ARTISTS","TYPE_ALBUMS","TYPE_TRACKS","SEARCH_TERM","TYPE","SearchBar","onSearchTermSubmit","event","preventDefault","selectValue","_this","refs","selectType","searchTerm","executeSearch","type","props","fetchSearchTermType","alert","storeSearchParams","fetchArtists","fetchAlbums","fetchTracks","this","react_default","a","createElement","className","onSubmit","placeholder","ref","defaultValue","name","disabled","React","Component","connect","state","searchTermType","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","get","params","q","sent","payload","data","artists","items","t0","error","stop","_x","apply","arguments","_ref2","_callee2","_context2","albums","_x2","_ref3","_callee3","_context3","tracks","_x3","termType","ArtistLatestAlbums","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleClass","setState","active","onClick","album","images","src","url","alt","FavoriteItems","onFavoriteClick","itemId","fetchFavorites","_this2","ArtistListItem","renderGenres","genres","genre","renderPopularity","popularity","fetchLatestAlbums","item","_this$props$item","noImage","src_components_FavoriteItems","ArtistLatestAlbums_ArtistLatestAlbums","artistLatestAlbums","_ref4","_callee4","_context4","_x4","AlbumTracks","renderDuration","duration","seconds","millisecondsToSeconds","minutes","millisecondsToMinutes","buildNumberTime","milliseconds","Math","floor","time","track","track_number","duration_ms","AlbumListItem","renderArtists","spanText","renderAvailability","availableMarkets","market","fetchAlbumTracks","available_markets","AlbumTracks_AlbumTracks","albumTracks","_ref5","_callee5","_context5","_x5","TrackListItem","artist","_this$props$item$albu","albumName","MusicListItem","selectListItem","_this$props","src_components_ArtistListItem","src_components_AlbumListItem","TrackListItem_TrackListItem","console","log","MusicList","renderMusicList","src_components_MusicListItem","App","src_components_SearchBar","components_MusicList","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5a8d1b26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noimage.1260c83f.jpg\";","import axios from 'axios';\r\nconst authorizeURL = \"https://accounts.spotify.com/authorize\";\r\nconst CLIENT_ID = \"70358d9ae7f84e6a83754104c6a91319\";\r\nconst href = window.location.href;\r\nconst ACTUAL_URL = href.substr(0, href.length-1);\r\n\r\nconst SpotifyAPI = () => {\r\n  const ACCESS_TOKEN = getToken();\r\n  return axios.create({\r\n    baseURL: \"https://api.spotify.com/v1\",\r\n    headers: {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${ACCESS_TOKEN}`\r\n    }\r\n  });\r\n}\r\n\r\nconst getToken = () => {\r\n  const hashURL = window.location.hash;\r\n  if(hashURL !== \"\") {\r\n    const hashs = getHashParams(hashURL.replace(\"#\", \"\"));\r\n    const hash = hashs.find(hash => hash.access_token !== undefined);\r\n    return hash.access_token;\r\n  }\r\n  window.location = `${authorizeURL}?response_type=token&client_id=${CLIENT_ID}&redirect_uri=${ACTUAL_URL}`;\r\n}\r\n\r\nconst getHashParams = hash => {\r\n  const params = hash.split(\"&\");\r\n  return params.map(param => {\r\n    let keyValue = param.split(\"=\");\r\n    let key = keyValue[0];\r\n    let value = keyValue[1];\r\n    let hash = {};\r\n    hash[key] = value;\r\n    return hash;\r\n  });\r\n}\r\n\r\nexport const renewToken = status => {\r\n  if ( status === 401 ) {\r\n    window.location.hash = \"\";\r\n    getToken();\r\n  }\r\n}\r\n\r\nexport default SpotifyAPI;\r\n  ","let favorites = [];\r\n\r\nexport const getFavorites = () => favorites;\r\n\r\nexport const updateFavorite = id => {\r\n  const isFavorite = getFavorite(id);\r\n  const newFavoriteStatus = changeFavoriteStatus(id, isFavorite);\r\n  const newFavorite = {id: id, isFavorite: newFavoriteStatus};\r\n  addFavorite(newFavorite);\r\n}\r\n\r\nconst getFavorite = id => {\r\n  const favorite = localStorage.getItem(id);\r\n  if (favorite === \"true\") return true;\r\n  else if (favorite === \"false\") return false;\r\n  return changeFavoriteStatus(id, false);\r\n}\r\n\r\nconst changeFavoriteStatus = (id, isFavorite) => {\r\n  const favoriteStatus = !isFavorite;\r\n  localStorage.setItem(id, (favoriteStatus).toString());\r\n  return favoriteStatus;\r\n}\r\n\r\nconst addFavorite = newFavorite => {\r\n  const hasFavorite = favorites.some(favorite => favorite.id === newFavorite.id)\r\n  if (hasFavorite) {\r\n    const newFavorites = favorites.map(favorite => {\r\n      if (newFavorite.id === favorite.id) {\r\n        return newFavorite;\r\n      }\r\n      return favorite;\r\n    });\r\n    favorites = newFavorites;\r\n  } else {\r\n    favorites.push(newFavorite);\r\n  }\r\n}\r\n","import SpotifyAPI, { renewToken } from '../apis/SpotifyAPI';\r\nimport { getFavorites } from '../apis/FavoriteAPI';\r\nexport const TYPE_ARTISTS = \"artist\";\r\nexport const TYPE_ALBUMS = \"album\";\r\nexport const TYPE_TRACKS = \"track\";\r\nexport const FETCH_LATEST_ALBUMS = \"FETCH_LATEST_ALBUMS\";\r\nexport const FETCH_ALBUM_TRACKS = \"FETCH_ALBUM_TRACKS\";\r\nexport const FETCH_FAVORITES = \"FETCH_FAVORITES\";\r\nexport const FETCH_SEARCH_TERM_TYPE = \"FETCH_SEARCH_TERM_TYPE\";\r\n\r\nexport const fetchArtists = searchTerm => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/search`, { \r\n      params: { q: searchTerm, type: TYPE_ARTISTS } \r\n    }); \r\n    dispatch({type: TYPE_ARTISTS, payload: response.data.artists.items});\r\n  } catch ( err ) {\r\n    renewToken (err.response.data.error.status);\r\n  }\r\n}\r\n\r\nexport const fetchAlbums = searchTerm => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/search`, { \r\n      params: { q: searchTerm, type: TYPE_ALBUMS } \r\n    });\r\n    dispatch({type: TYPE_ALBUMS, payload: response.data.albums.items});\r\n  } catch ( err ) {\r\n    renewToken (err.response.data.error.status);\r\n  }\r\n}\r\n\r\nexport const fetchTracks = searchTerm => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/search`, { \r\n      params: { q: searchTerm, type: TYPE_TRACKS } \r\n    });\r\n    dispatch({type: TYPE_TRACKS, payload: response.data.tracks.items});\r\n  } catch ( err ) {\r\n    renewToken (err.response.data.error.status);\r\n  }\r\n}\r\n\r\nexport const fetchLatestAlbums = id => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/artists/${id}/albums`);\r\n    dispatch({type: FETCH_LATEST_ALBUMS, payload: response.data.items});\r\n  } catch ( err ) {\r\n    renewToken (err.response.data.error.status);\r\n  }\r\n}\r\n\r\nexport const fetchAlbumTracks = id => async dispatch => {\r\n  try {\r\n    const response = await SpotifyAPI().get(`/albums/${id}/tracks`);\r\n    dispatch({type: FETCH_ALBUM_TRACKS, payload: response.data.items});\r\n  } catch ( err ) {\r\n    renewToken (err.response.data.error.status);\r\n  }\r\n}\r\n\r\nexport const fetchFavorites = () => {\r\n  const response = getFavorites()\r\n  return { type: FETCH_FAVORITES, payload: response };\r\n}\r\n\r\nexport const fetchSearchTermType = termType => {\r\n  return { type: FETCH_SEARCH_TERM_TYPE, payload: termType };\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchArtists, fetchAlbums, fetchTracks, fetchSearchTermType, TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\nimport './SearchBar.scss';\r\nconst SEARCH_TERM = \"SEARCH_TERM\";\r\nconst TYPE = \"TYPE\";\r\n\r\nclass SearchBar extends React.Component {\r\n  componentDidMount() { \r\n    const searchTerm = localStorage.getItem(SEARCH_TERM);\r\n    const type = localStorage.getItem(TYPE);\r\n    if (searchTerm !== null && type !== null && window.location.hash !== \"\") {\r\n      this.executeSearch(searchTerm, type);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <form className=\"search-bar\" onSubmit={this.onSearchTermSubmit}>\r\n        <input type=\"text\" placeholder=\"Search\" ref=\"searchTerm\" />\r\n        <select defaultValue=\"default\" name=\"type\" ref=\"selectType\">\r\n          <option disabled=\"disabled\" value=\"default\">Search option</option>\r\n          <option value={TYPE_ARTISTS}>Artist</option>\r\n          <option value={TYPE_ALBUMS}>Album</option>\r\n          <option value={TYPE_TRACKS}>Track</option>\r\n        </select>\r\n        <button>Search</button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  onSearchTermSubmit = event => {\r\n    event.preventDefault();\r\n    const selectValue = this.refs.selectType.value;\r\n    const searchTerm = this.refs.searchTerm.value;\r\n    this.executeSearch(searchTerm, selectValue);\r\n  }\r\n  \r\n  executeSearch = (searchTerm, type) => {\r\n    this.props.fetchSearchTermType(type);\r\n    if(searchTerm === '') {\r\n      alert('Type a serch term');\r\n    } else {\r\n      switch (type) {\r\n        case TYPE_ARTISTS:\r\n          this.storeSearchParams(searchTerm, type);\r\n          this.props.fetchArtists(searchTerm);\r\n          break;\r\n        case TYPE_ALBUMS:\r\n          this.storeSearchParams(searchTerm, type);\r\n          this.props.fetchAlbums(searchTerm);\r\n          break;\r\n        case TYPE_TRACKS:\r\n          this.storeSearchParams(searchTerm, type);\r\n          this.props.fetchTracks(searchTerm);\r\n          break;\r\n        default:\r\n          alert('Select type value');\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  storeSearchParams = (searchTerm, type) => {\r\n    localStorage.setItem(SEARCH_TERM, searchTerm);\r\n    localStorage.setItem(TYPE, type);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { searchTermType: state.searchTermType };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchArtists, fetchAlbums, fetchTracks, fetchSearchTermType  })(SearchBar);","import React from 'react';\r\n\r\nexport default class ArtistLatestAlbums extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { active: false }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"artist-latest-albums\" onClick={this.toggleClass}>\r\n        <h4>Artist's latest albums</h4>\r\n        <ul className={`albums-list ${this.state.active ? \"\" : \"hide\"}`} >\r\n          {this.props.albums.map(album => {\r\n            const { images, name } = album;\r\n            return (\r\n              <li className=\"album\" key={album.id}>\r\n                <img className=\"folder\" src={images.length ? images[0].url: \"\"} alt=\"Album folder\" />\r\n                <span className=\"name\">{name}</span>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleClass = () => this.setState({active: !this.state.active});\r\n\r\n}","import React from 'react';\r\nimport './FavoriteItems.scss';\r\nimport { connect } from 'react-redux';\r\nimport { fetchFavorites } from '../actions';\r\nimport { updateFavorite } from '../apis/FavoriteAPI';\r\n\r\nclass FavoriteItems extends React.Component {\r\n\r\n  componentDidMount() {\r\n    updateFavorite(this.props.itemId);\r\n    this.props.fetchFavorites();\r\n  }\r\n\r\n  render(){\r\n    const getFavorite = this.props.favorites.find(favorite => favorite.id === this.props.itemId);\r\n    const favorite = getFavorite === undefined ? false : getFavorite;\r\n    return(\r\n      <div className=\"FavoriteItems\">\r\n        <span>Favorite: </span>\r\n        <i className={`${favorite.isFavorite ? \"fas\" : \"far\"} fa-star`} onClick={this.onFavoriteClick}></i>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onFavoriteClick = () => {\r\n    updateFavorite(this.props.itemId);\r\n    this.props.fetchFavorites();\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { favorites: state.favorites };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchFavorites })(FavoriteItems);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ArtistLatestAlbums from './ArtistLatestAlbums';\r\nimport { fetchLatestAlbums } from '../actions';\r\nimport './ArtistListItem.scss';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport noImage from '../images/noimage.jpg';\r\n\r\nclass ArtistListItem extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchLatestAlbums(this.props.item.id);\r\n  }\r\n\r\n  render () {\r\n    const { id, images, name, genres, popularity } = this.props.item;\r\n    return (\r\n      <div className=\"artist-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url : noImage} alt=\"Song\" />\r\n        <div className=\"description\">\r\n          <span>Name: {name}</span>\r\n          <div>Genres: {this.renderGenres(genres)}</div>\r\n          <span>Popularity: {this.renderPopularity(popularity)}</span>\r\n          <FavoriteItems itemId={id} />\r\n        </div>\r\n        <ArtistLatestAlbums albums={this.props.albums} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderGenres = genres => genres.map(genre => <span key={genre}>{genre}, </span>);\r\n  \r\n  renderPopularity = popularity => {\r\n    if (popularity > 80) {\r\n      return \"Hot\";\r\n    } else if (popularity >= 60 && popularity <= 79) {\r\n      return \"Cool\";\r\n    } else if (popularity >= 30 && popularity <= 59) {\r\n      return \"Regular\";\r\n    } else if (popularity < 30) {\r\n      return \"Underground\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { albums: state.artistLatestAlbums };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchLatestAlbums })(ArtistListItem);","import React from 'react';\r\n\r\nexport default class AlbumTracks extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { active: false };\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className={`album-tracks ${this.state.active ? \"spread\": \"\"}`} onClick={this.toggleClass}>\r\n        <h4>Tracks</h4>\r\n        <ul className={`tracks ${this.state.active ? \"\" : \"hide\"}`}>\r\n          {this.props.tracks.map(track => {\r\n            return (\r\n              <li className=\"track\" key={track.id}>\r\n                <span>{track.track_number}</span>\r\n                <span>{track.name}</span>\r\n                <span>{this.renderDuration(track.duration_ms)}</span>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDuration = duration => {\r\n    const seconds = this.millisecondsToSeconds(duration)\r\n    const minutes = this.millisecondsToMinutes(duration);\r\n    return `${this.buildNumberTime(minutes)}:${this.buildNumberTime(seconds)}`;\r\n  }\r\n  \r\n  millisecondsToSeconds = milliseconds => Math.floor((milliseconds / 1000) % 60);\r\n  \r\n  millisecondsToMinutes = milliseconds => Math.floor((milliseconds / (1000 * 60)) % 60);\r\n  \r\n  buildNumberTime = time => time < 10 ? `0${time}` : time;\r\n\r\n  toggleClass = () => this.setState({ active: !this.state.active });\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAlbumTracks } from '../actions';\r\nimport AlbumTracks from './AlbumTracks';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport './AlbumListItem.scss';\r\nimport noImage from '../images/noimage.jpg';\r\n\r\nclass AlbumListItem extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchAlbumTracks(this.props.item.id);\r\n  }\r\n\r\n  render() {\r\n    const { id, images, name, artists, available_markets } = this.props.item;\r\n    return(\r\n      <div className=\"album-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url : noImage} alt=\"Album folder\" />\r\n        <div className=\"description\">\r\n          <span>Name: {name}</span>\r\n          <div>Artist(s): {this.renderArtists(artists)}</div>\r\n          <div className=\"availability\">Availability: {this.renderAvailability(available_markets)}</div>\r\n          <FavoriteItems itemId={id} />\r\n        </div>\r\n        <AlbumTracks tracks={this.props.tracks} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderArtists = artists => {\r\n    let spanText = \"\";\r\n    if (artists.length === 0) {\r\n      spanText = \"\";\r\n    }\r\n    if (artists.length === 1) {\r\n      spanText = artists[0].name;\r\n    }\r\n    if (artists.length > 1) {\r\n      spanText = \"Various artists\";\r\n    }\r\n    return <span className=\"available-market\">{spanText}</span>;\r\n  }\r\n\r\n  renderAvailability = availableMarkets => {\r\n    return availableMarkets.map(market => <span key={market}>{market}, </span>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { tracks: state.albumTracks };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchAlbumTracks })(AlbumListItem);","import React from 'react';\r\nimport FavoriteItems from './FavoriteItems';\r\nimport './TrackListItem.scss';\r\nimport noImage from '../images/noimage.jpg';\r\n\r\nexport default class TrackListItem extends React.Component {\r\n  render() {\r\n    const { id, name, artists, duration_ms } = this.props.item;\r\n    const { images, albumName } = this.props.item.album;\r\n    return(\r\n      <div className=\"track-list-item\">\r\n        <img className=\"album-image\" src={images.length ? images[0].url : noImage} alt=\"Album folder\" />\r\n          <span>{name}</span>\r\n          <div>{this.renderArtists(artists)}</div>\r\n          <span>{albumName}</span>\r\n          <span>{this.renderDuration(duration_ms)}</span>\r\n          <FavoriteItems itemId={id} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDuration = duration => {\r\n    const seconds = this.millisecondsToSeconds(duration)\r\n    const minutes = this.millisecondsToMinutes(duration);\r\n    return `${this.buildNumberTime(minutes)}:${this.buildNumberTime(seconds)}`;\r\n  }\r\n  \r\n  millisecondsToSeconds = milliseconds => Math.floor((milliseconds / 1000) % 60);\r\n  \r\n  millisecondsToMinutes = milliseconds => Math.floor((milliseconds / (1000 * 60)) % 60);\r\n  \r\n  buildNumberTime = time => time < 10 ? `0${time}` : time;\r\n\r\n  toggleClass = () => this.setState({ active: !this.state.active });\r\n\r\n  renderArtists = artists => artists.map(artist => <span key={artist.id}>{artist.name}, </span>);\r\n}","import React from 'react';\r\nimport './MusicListItem.scss';\r\nimport { TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\nimport ArtistListItem from './ArtistListItem';\r\nimport AlbumListItem from './AlbumListItem';\r\nimport TrackListItem from './TrackListItem';\r\n\r\nclass MusicListItem extends React.Component {\r\n  render () {console.log(\"searching...\");\r\n    return (\r\n      <li className=\"music-list-item\">\r\n        {this.selectListItem()}\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  selectListItem = () => {\r\n    const { item, type } = this.props;\r\n    switch(type) {\r\n      case TYPE_ARTISTS:\r\n        return <ArtistListItem item={item} />;\r\n      case TYPE_ALBUMS:\r\n        return <AlbumListItem item={item} />\r\n      case TYPE_TRACKS:\r\n        return <TrackListItem item={item} />\r\n      default:\r\n        return <div>Not found</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MusicListItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MusicListItem from './MusicListItem';\r\nimport { TYPE_ARTISTS, TYPE_ALBUMS, TYPE_TRACKS } from '../actions';\r\n\r\nclass MusicList extends React.Component {\r\n  render(){\r\n    return(\r\n      <ul className=\"music-list\">\r\n        {this.renderMusicList(this.props)}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  renderMusicList = ({artists, albums, tracks}) => {\r\n    let items = [];\r\n    let type = \"\";\r\n    switch (this.props.searchTermType) {\r\n      case TYPE_ARTISTS:\r\n        items = artists;\r\n        type = TYPE_ARTISTS;\r\n        break\r\n      case TYPE_ALBUMS: \r\n        items = albums;\r\n        type = TYPE_ALBUMS;\r\n        break;\r\n      case TYPE_TRACKS:\r\n        items = tracks;\r\n        type = TYPE_TRACKS;\r\n        break;\r\n      default:\r\n        return (\r\n          <div className=\"loading\">\r\n            <span>Search for an artist, album or track</span>\r\n          </div>\r\n        );\r\n    }\r\n    return items.map(item => <MusicListItem key={item.id} item={item} type={type} />);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { artists: state.artists, albums: state.albums, tracks: state.tracks, searchTermType: state.searchTermType };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MusicList);","import React from 'react';\r\nimport './App.scss';\r\nimport SearchBar from './components/SearchBar';\r\nimport MusicList from './components/MusicList';\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <SearchBar />\r\n        </header>\r\n        <MusicList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { TYPE_ARTISTS,  TYPE_ALBUMS, TYPE_TRACKS, FETCH_LATEST_ALBUMS, FETCH_ALBUM_TRACKS, FETCH_FAVORITES, FETCH_SEARCH_TERM_TYPE } from '../actions';\r\n\r\nconst artistsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_ARTISTS:\r\n    return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst albumsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_ALBUMS:\r\n    return action.payload;\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\nconst tracksReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TYPE_TRACKS:\r\n    return action.payload;\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\nconst latestArtistAlbumsReducer = (state = [], action) => { \r\n  switch (action.type) {\r\n    case FETCH_LATEST_ALBUMS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst albumTracksReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALBUM_TRACKS: \r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst favoritesReducer = (state = [], action) => { \r\n  switch (action.type) {\r\n    case FETCH_FAVORITES:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst searchTermTypeReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_TERM_TYPE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  artists: artistsReducer,\r\n  albums: albumsReducer,\r\n  tracks: tracksReducer,\r\n  artistLatestAlbums: latestArtistAlbumsReducer,\r\n  albumTracks: albumTracksReducer,\r\n  favorites: favoritesReducer,\r\n  searchTermType: searchTermTypeReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, \r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}